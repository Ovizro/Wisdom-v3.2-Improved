# Copyright 2017 Cheng Cao
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# =============================================================================
#  PLEASE FOLLOW THE LICENSE AND PLEASE DO NOT REMOVE THE LICENSE HEADER
# =============================================================================
#  ANY USE OF THE SHADER ONLINE OR OFFLINE IS CONSIDERED AS INCLUDING THE CODE
#  IF YOU DOWNLOAD THE SHADER, IT MEANS YOU AGREE AND OBSERVE THIS LICENSE
# =============================================================================

clouds              = off
dynamicHandLight    = true
oldLighting         = false
underwaterOverlay   = false
sun                 = false
moon                = false
sky                 = false

##=============textures=============##
texture.composite.depthtex2=textures/total.png

#texture.gbuffers.gaux1=textures/RippleAnimation1.png
#texture.gbuffers.gaux2=textures/RippleAnimation2.png
#texture.gbuffers.gaux3=textures/RippleAnimation3.png

##=============uniform=============##

#	Time----
variable.float.sunRise0 =	clamp((worldTime * 1.0 - 23200.0) / 400.0, 	0.0, 1.0)
variable.float.sunRise1 = 	clamp((worldTime * 1.0			) / 2000.0, 0.0, 1.0)
variable.float.sunRise2 = 	clamp((worldTime * 1.0 - 23000.0) / 1000.0, 0.0, 1.0)
variable.float.sunSet0 	= 	clamp((worldTime * 1.0 - 10000.0) / 2000.0, 0.0, 1.0)
variable.float.sunSet1 	= 	clamp((worldTime * 1.0 - 12600.0) / 170.0, 	0.0, 1.0)
variable.float.sunSet2 	= 	clamp((worldTime * 1.0 - 12500.0) / 250.0, 	0.0, 1.0)
variable.float.moonRise0	= 	clamp((worldTime * 1.0 - 12890.0) / 210.0, 	0.0, 1.0)
variable.float.moonRise1 	= 	clamp((worldTime * 1.0 - 13250.0) / 1000.0,	0.0, 1.0)
variable.float.moonSet0 	= 	clamp((worldTime * 1.0 - 21000.0) / 1500.0, 0.0, 1.0)
variable.float.moonSet1 	= 	clamp((worldTime * 1.0 - 22700.0) / 400.0, 	0.0, 1.0)

uniform.vec4.Time = vec4((sunRise0 * sunRise0 * (3.0 - 2.0 * sunRise0) + 1.0 - sunRise1), \
	(sunRise1 - sunSet0), \
	(sunSet0 - sunSet1 * sunSet1 *(3.0 - 2.0 * sunSet1)), \
	(sunSet1 * sunSet1 * (3.0 - 2.0 * sunSet1) - sunRise0 * sunRise0 * (3.0 - 2.0 * sunRise0)))
uniform.vec4.nTime = vec4((moonRise0 * moonRise0 * (3.0 - 2.0 * moonRise0) - moonRise1), \
	(moonRise1 - moonSet0), \
	(moonSet0 - moonSet1 * moonSet1 *(3.0 - 2.0 * moonSet1)), \
	(moonSet1 * moonSet1 * (3.0 - 2.0 * moonSet1) + 1.0 - moonRise0 * moonRise0 * (3.0 - 2.0 * moonRise0)))
uniform.vec4.SunTime0 = vec4((sunRise2 * sunRise2 * (3.0 - 2.0 * sunRise2) + 1.0 - sunRise1), \
	(sunRise1 - sunSet0), \
	(sunSet0 - sunSet2 * sunSet2 *(3.0 - 2.0 * sunSet2)), \
	(sunSet2 * sunSet2 * (3.0 - 2.0 * sunSet2) - sunRise2 * sunRise2 * (3.0 - 2.0 * sunRise2)))

#	pixel----
uniform.vec2.pixel = vec2(1.0 / viewWidth, 1.0 / viewHeight)

#	biome----
variable.float.biomeTem = clamp(smooth(0.0, temperature, 8.0, 8.0), 0.0, 1.0)
variable.float.biomeRS = if(\
	temperature > 0.95, 0.0, \
	temperature < 0.15, 0.5, \
	(temperature >= 0.15 && temperature <= 0.95), 1.0, \
	1.0)
#uniform.float.AdjTemp = biomeTem
#uniform.float.AdjRainfall = clamp(min(1.0, biomeRS * 2.0), 0.0, 1.0) * AdjTemp
uniform.vec3.BiomeType = vec3(biome, smooth(0.0, biomeRS, 10.0, 10.0), biomeTem)

variable.float.hurt = smooth(if(is_hurt, 1.0, 0.0), 0.02, 4.0)
uniform.vec3.vignetteColor = vec3(1.0, 0.1, 0.1) * hurt

#	light vector----
variable.float.sunVectorNorm = 1.0 / sqrt((sunPosition.x * sunPosition.x) + (sunPosition.y * sunPosition.y) + (sunPosition.z * sunPosition.z))
uniform.vec3.sunVectorView = vec3(sunPosition.x * sunVectorNorm, sunPosition.y * sunVectorNorm, sunPosition.z * sunVectorNorm)
variable.float.sunVectorX = gbufferModelViewInverse.0.0 * sunPosition.x + gbufferModelViewInverse.1.0 * sunPosition.y + gbufferModelViewInverse.2.0 * sunPosition.z
variable.float.sunVectorY = gbufferModelViewInverse.0.1 * sunPosition.x + gbufferModelViewInverse.1.1 * sunPosition.y + gbufferModelViewInverse.2.1 * sunPosition.z
variable.float.sunVectorZ = gbufferModelViewInverse.0.2 * sunPosition.x + gbufferModelViewInverse.1.2 * sunPosition.y + gbufferModelViewInverse.2.2 * sunPosition.z
uniform.vec3.sunVector = vec3(sunVectorX * sunVectorNorm, sunVectorY * sunVectorNorm, sunVectorZ * sunVectorNorm)

variable.float.moonVectorNorm = 1.0 / sqrt((moonPosition.x * moonPosition.x) + (moonPosition.y * moonPosition.y) + (moonPosition.z * moonPosition.z))
uniform.vec3.moonVectorView = vec3(moonPosition.x * moonVectorNorm, moonPosition.y * moonVectorNorm, moonPosition.z * moonVectorNorm)
variable.float.moonVectorX = gbufferModelViewInverse.0.0 * moonPosition.x + gbufferModelViewInverse.1.0 * moonPosition.y + gbufferModelViewInverse.2.0 * moonPosition.z
variable.float.moonVectorY = gbufferModelViewInverse.0.1 * moonPosition.x + gbufferModelViewInverse.1.1 * moonPosition.y + gbufferModelViewInverse.2.1 * moonPosition.z
variable.float.moonVectorZ = gbufferModelViewInverse.0.2 * moonPosition.x + gbufferModelViewInverse.1.2 * moonPosition.y + gbufferModelViewInverse.2.2 * moonPosition.z
uniform.vec3.moonVector = vec3(moonVectorX * moonVectorNorm, moonVectorY * moonVectorNorm, moonVectorZ * moonVectorNorm)

variable.float.shadowLightVectorNorm = 1.0 / sqrt((shadowLightPosition.x * shadowLightPosition.x) + (shadowLightPosition.y * shadowLightPosition.y) + (shadowLightPosition.z * shadowLightPosition.z))
uniform.vec3.shadowLightVectorView = vec3(shadowLightPosition.x * moonVectorNorm, shadowLightPosition.y * moonVectorNorm, shadowLightPosition.z * moonVectorNorm)
variable.float.shadowLightVectorX = gbufferModelViewInverse.0.0 * shadowLightPosition.x + gbufferModelViewInverse.1.0 * shadowLightPosition.y + gbufferModelViewInverse.2.0 * shadowLightPosition.z
variable.float.shadowLightVectorY = gbufferModelViewInverse.0.1 * shadowLightPosition.x + gbufferModelViewInverse.1.1 * shadowLightPosition.y + gbufferModelViewInverse.2.1 * shadowLightPosition.z
variable.float.shadowLightVectorZ = gbufferModelViewInverse.0.2 * shadowLightPosition.x + gbufferModelViewInverse.1.2 * shadowLightPosition.y + gbufferModelViewInverse.2.2 * shadowLightPosition.z
uniform.vec3.shadowLightVector = vec3(shadowLightVectorX * shadowLightVectorNorm, shadowLightVectorY * shadowLightVectorNorm, shadowLightVectorZ * shadowLightVectorNorm)

##=============program=============##
#program.composite4.enabled = !VL_DEBUG
#program.composite5.enabled = !VL_DEBUG
##=============profile=============##
profile.LITE = !COLORFUL_SHADOW ambientOcclusionLevel=1.0f CrespecularRays=0 !WISDOM_AMBIENT_OCCLUSION !HQ_AO !IBL !IBL_SSR SSR_STEPS=12 !DIRECTIONAL_LIGHTMAP !SHADOW_FILTER !VARIANCE_SHADOW_MAPS shadowDistance=64.0 shadowMapResolution=512 !WAVING_SHADOW !CLOUD_SHADOW !NORMALS !ParallaxOcclusion !WATER_PARALLAX !WATER_REFRACTION NATURAL_WAVE_GENERATOR !WATER_CAUSTICS !WAVING_FOILAGE !BLOOM DOF=0 !MOTION_BLUR !SSEDAA VIGNETTE DIRTY_LENS=0 !SCREEN_RAIN_DROPS CLOUDS=1 !LF !PHYSICAL_SKY PHYSICAL_SKY_LIGHT=2  PHYSICAL_SKY_SMOOTH=2 MOTIONBLUR_SAMPLE=3 !STARS !HUE_ADJUSTMENT ANIMATION=0 DELAY=15.0 FRAME_COUNTERS=20.0

profile.LOW = !COLORFUL_SHADOW ambientOcclusionLevel=0.5f CrespecularRays=0 WISDOM_AMBIENT_OCCLUSION !HQ_AO IBL !IBL_SSR SSR_STEPS=12 DIRECTIONAL_LIGHTMAP SHADOW_FILTER !VARIANCE_SHADOW_MAPS shadowDistance=90.0 shadowMapResolution=1024 !WAVING_SHADOW !CLOUD_SHADOW NORMALS !ParallaxOcclusion WATER_PARALLAX WATER_REFRACTION NATURAL_WAVE_GENERATOR !WATER_CAUSTICS WAVING_FOILAGE !BLOOM DOF=0 !MOTION_BLUR !SSEDAA VIGNETTE DIRTY_LENS=0 !SCREEN_RAIN_DROPS CLOUDS=1 !LF !PHYSICAL_SKY PHYSICAL_SKY_LIGHT=2 PHYSICAL_SKY_SMOOTH=2 MOTIONBLUR_SAMPLE=3 !STARS !HUE_ADJUSTMENT ANIMATION=0 DELAY=10.0 FRAME_COUNTERS=20.0

profile.MEDIUM = !COLORFUL_SHADOW ambientOcclusionLevel=0.0f CrespecularRays=1 WISDOM_AMBIENT_OCCLUSION HQ_AO IBL IBL_SSR SSR_STEPS=16 DIRECTIONAL_LIGHTMAP SHADOW_FILTER VARIANCE_SHADOW_MAPS shadowDistance=128.0 shadowMapResolution=1512 !WAVING_SHADOW !CLOUD_SHADOW NORMALS !ParallaxOcclusion WATER_PARALLAX WATER_REFRACTION NATURAL_WAVE_GENERATOR !WATER_CAUSTICS WAVING_FOILAGE BLOOM DOF=2 !MOTION_BLUR !SSEDAA VIGNETTE DIRTY_LENS=0 SCREEN_RAIN_DROPS CLOUDS=2 LF !PHYSICAL_SKY PHYSICAL_SKY_LIGHT=2 PHYSICAL_SKY_SMOOTH=2 MOTIONBLUR_SAMPLE=3 STARS HUE_ADJUSTMENT ANIMATION=3 DELAY=7.0 FRAME_COUNTERS=30.0

profile.HIGH = COLORFUL_SHADOW ambientOcclusionLevel=0.0f CrespecularRays=2 WISDOM_AMBIENT_OCCLUSION HQ_AO IBL IBL_SSR SSR_STEPS=16 DIRECTIONAL_LIGHTMAP SHADOW_FILTER VARIANCE_SHADOW_MAPS shadowDistance=160.0 shadowMapResolution=2048 WAVING_SHADOW CLOUD_SHADOW NORMALS ParallaxOcclusion WATER_PARALLAX WATER_REFRACTION NATURAL_WAVE_GENERATOR WATER_CAUSTICS WAVING_FOILAGE BLOOM DOF=2 MOTION_BLUR !SSEDAA VIGNETTE DIRTY_LENS=2 SCREEN_RAIN_DROPS CLOUDS=3 LF PHYSICAL_SKY PHYSICAL_SKY_LIGHT=2 PHYSICAL_SKY_SMOOTH=2 MOTIONBLUR_SAMPLE=3 STARS HUE_ADJUSTMENT ANIMATION=2 DELAY=5.0 FRAME_COUNTERS=50.0

profile.ULTRA = COLORFUL_SHADOW ambientOcclusionLevel=0.0f CrespecularRays=3 WISDOM_AMBIENT_OCCLUSION HQ_AO IBL IBL_SSR SSR_STEPS=20 DIRECTIONAL_LIGHTMAP SHADOW_FILTER VARIANCE_SHADOW_MAPS shadowDistance=256.0 shadowMapResolution=4096 WAVING_SHADOW CLOUD_SHADOW NORMALS ParallaxOcclusion WATER_PARALLAX WATER_REFRACTION NATURAL_WAVE_GENERATOR WATER_CAUSTICS WAVING_FOILAGE BLOOM DOF=3 MOTION_BLUR SSEDAA VIGNETTE DIRTY_LENS=2 SCREEN_RAIN_DROPS CLOUDS=3 LF PHYSICAL_SKY  PHYSICAL_SKY_LIGHT=5 PHYSICAL_SKY_SMOOTH=4 MOTIONBLUR_SAMPLE=6 STARS HUE_ADJUSTMENT ANIMATION=3 DELAY=1.0 FRAME_COUNTERS=100.0

profile.EXTREME = COLORFUL_SHADOW ambientOcclusionLevel=0.0f CrespecularRays=8 WISDOM_AMBIENT_OCCLUSION HQ_AO IBL IBL_SSR SSR_STEPS=20 DIRECTIONAL_LIGHTMAP SHADOW_FILTER VARIANCE_SHADOW_MAPS shadowDistance=256.0 shadowMapResolution=8192 WAVING_SHADOW CLOUD_SHADOW NORMALS ParallaxOcclusion WATER_PARALLAX WATER_REFRACTION NATURAL_WAVE_GENERATOR WATER_CAUSTICS WAVING_FOILAGE BLOOM DOF=4 MOTION_BLUR SSEDAA VIGNETTE DIRTY_LENS=2 SCREEN_RAIN_DROPS CLOUDS=3 LF PHYSICAL_SKY  PHYSICAL_SKY_LIGHT=6 PHYSICAL_SKY_SMOOTH=6 MOTIONBLUR_SAMPLE=15 STARS HUE_ADJUSTMENT ANIMATION=0 DELAY=0.5 FRAME_COUNTERS=150.0

profile.GPUKILLER = profile.EXTREME CrespecularRays=99 MOTIONBLUR_SAMPLE=99 PHYSICAL_SKY_SMOOTH=10 FRAME_COUNTERS=200.0
##=============sliders=============##
sliders=sunPathRotation shadowDistance shadowMapResolution maxSteps scale TILE_RESOLUTION \
SEA_HEIGHT SEA_SPEED SEA_FREQ SEA_CHOPPY \
EXPOSURE EFFECT_STRENGTH DIRTY_LENS_STRENGTH \
PHYSICAL_SKY_LIGHT PHYSICAL_SKY_SMOOTH \
WaterFogColor_R WaterColorWeight_R WaterFogColor_G WaterColorWeight_G WaterFogColor_B WaterColorWeight_B WaterColor_A \
DeepWaterFogColor_R DeepWaterFogColor_G DeepWaterFogColor_B DeepWaterFogStrength \
MOTIONBLUR_MAX MOTIONBLUR_STRENGTH MOTIONBLUR_SAMPLE \
LF1SIZE LF1POS LF_COLOR_R1 LF_COLOR_G1 LF_COLOR_B1 LF_COLOR_A1 \
LF2SIZE LF2POS LF_COLOR_R2 LF_COLOR_G2 LF_COLOR_B2 LF_COLOR_A2 \
LF3SIZE LF3POS LF_COLOR_R3 LF_COLOR_G3 LF_COLOR_B3 LF_COLOR_A3 \
LF4SIZE LF4POS LF_COLOR_R4 LF_COLOR_G4 LF_COLOR_B4 LF_COLOR_A4 \
CrespecularRays RayStrength VLCWWT_STRENGTH \
SUN_COLOR_TEMPERATURE_DEBUG BASIC_SUN_COLOR_TEMPERATURE BASIC_MOON_COLOR_TEMPERATURE MORNING_COLOR_TEMPERATURE NOON_COLOR_TEMPERATURE EVENING_COLOR_TEMPERATURE CLOUDY_COLOR_TEMPERATURE MIDNIGHT_COLOR_TEMPERATURE LIGHT_COLOR_TEMPERATURE LIGHT_LEVEL colorTexture_debug \
MaxDistanceBlurAmount DistanceBlurRange EdgeBlurAmount EdgeBlurDecline FringeOffset BlurAmount \
CLOUD_MIN CLOUD_MAX \
STAR_COLOR_TEMPERATURE STAR_LIGHT_LEVEL STAR_DENSITY \
MORNING_LIGHT NOON_LIGHT EVENING_LIGHT NIGHT_LIGHT \
TONE BRIGHTNESS CONTRAST SATURATION VIBRANCE HUE \
COLOR_BALANCE_S_R COLOR_BALANCE_M_R COLOR_BALANCE_H_R COLOR_BALANCE_S_G COLOR_BALANCE_M_G COLOR_BALANCE_H_G COLOR_BALANCE_S_B COLOR_BALANCE_M_B COLOR_BALANCE_H_B \
DELAY FRAME_COUNTERS \
ANAMORPHIC_EDGE TRANSLUCENT_ANAMORPHIC_EDGE ANAMORPHIC_CONTRACT_SPEED TRANSLUCENT_ANAMORPHIC_CONTRACT_SPEED \
LOZENGULAR_SHADE_MIDDLE_TIME LOZENGULAR_SHADE_MIDDLE_POSITION TRANSLUCENT_LOZENGULAR_SHADE_MIDDLE_POSITION \
ROUND_SHADE_MIDDLE_TIME ROUND_SHADE_MIDDLE_POSITION TRANSLUCENT_ROUND_SHADE_MIDDLE_POSITION

##=============screen=============##
screen = <profile> [TONE_OPTION] <empty> <empty> [LIGHTING] [ATMOSPHERE] [MATERIALS] [WAVING_OPTION] [WATER_OPTIONS] [IMAGE_EFFECTS] <empty> <empty> [DEBUG_OPTION] Version

screen.ATMOSPHERE = PHYSICAL_SKY [PHYSICAL_SKY_DEBUG] <empty> <empty> STARS STAR_COLOR_TEMPERATURE STAR_LIGHT_LEVEL STAR_DENSITY <empty> <empty> CrespecularRays [CRESPECULAR_RAYS_OPTION] CLOUDS ATMOSPHERE_FOG

screen.CRESPECULAR_RAYS_OPTION = NewCrespecularRays RayStrength <empty> <empty> VLCWWT VLCWWT_STRENGTH

screen.PHYSICAL_SKY_DEBUG = <empty> MARS_ATMOSPHERE PHYSICAL_SKY_LIGHT PHYSICAL_SKY_SMOOTH <empty> <empty>

screen.COSTOM_SUN_COLOR_TEMPERATURE = BASIC_SUN_COLOR_TEMPERATURE BASIC_MOON_COLOR_TEMPERATURE <empty> <empty> MORNING_COLOR_TEMPERATURE NOON_COLOR_TEMPERATURE EVENING_COLOR_TEMPERATURE MIDNIGHT_COLOR_TEMPERATURE <empty> <empty> CLOUDY_COLOR_TEMPERATURE

screen.LIGHTING = WISDOM_AMBIENT_OCCLUSION HQ_AO IBL IBL_SSR SSR_STEPS DIRECTIONAL_LIGHTMAP ambientOcclusionLevel DARK_NIGHT <empty> <empty> [SHADOW_OPTIONS] [LIGHT_COLOR]
screen.MATERIALS = NORMALS <empty> <empty> <empty> ParallaxOcclusion maxSteps scale TILE_RESOLUTION <empty> <empty> SPECULAR_TO_PBR_CONVERSION CONTINUUM2_TEXTURE_FORMAT <empty> 

screen.LIGHT_COLOR = LIGHT_COLOR_TEMPERATURE LIGHT_LEVEL <empty> <empty> SUN_LIGHT_COLOR [COSTOM_SUN_COLOR_TEMPERATURE] <empty> <empty> MORNING_LIGHT NOON_LIGHT EVENING_LIGHT NIGHT_LIGHT

screen.IMAGE_EFFECTS = [BLOOM_OPITION] [LEN_FLARE] [BLUR_OPITION] [ANIMATION_OPTION] <empty> <empty> VIGNETTE SCREEN_RAIN_DROPS FORCE_GROUND_WETNESS SSEDAA WorldTimeAnimation [SOMETHING_FUN]

screen.ANIMATION_OPTION = ANIMATION CORNER_MARK DELAY FRAME_COUNTERS <empty> <empty> [ANIMATION_SHADE]

screen.ANIMATION_SHADE = <empty> RECTANGULAR_SHADE LOZENGULAR_SHADE ROUND_SHADE WHITE_SHADE <empty> <empty> <empty> <empty> ANAMORPHIC_EDGE LOZENGULAR_SHADE_PAUSE ROUND_SHADE_PAUSE TRANSLUCENT_SHADE TRANSLUCENT_ANAMORPHIC_EDGE <empty> <empty> TRANSLUCENT_SHADE_BLUR <empty> LOZENGULAR_SHADE_MIDDLE_TIME ROUND_SHADE_MIDDLE_TIME <empty> ANAMORPHIC_CONTRACT_SPEED LOZENGULAR_SHADE_MIDDLE_POSITION ROUND_SHADE_MIDDLE_POSITION <empty> TRANSLUCENT_ANAMORPHIC_CONTRACT_SPEED TRANSLUCENT_LOZENGULAR_SHADE_MIDDLE_POSITION TRANSLUCENT_ROUND_SHADE_MIDDLE_POSITION

screen.SOMETHING_FUN = SPACE EIGHT_BIT

screen.LEN_FLARE = LENS_FLARE <empty> LF [COSTOM_LF] <empty> <empty> BSL_LENS_FLARE

screen.BLOOM_OPITION = BLOOM EFFECT_STRENGTH <empty> <empty> DIRTY_LENS DIRTY_LENS_STRENGTH

screen.COSTOM_LF = LF1 <empty> LF1SIZE LF1POS LF_COLOR_R1 LF_COLOR_G1 LF_COLOR_B1 LF_COLOR_A1 LF2 <empty> LF2SIZE LF2POS LF_COLOR_R2 LF_COLOR_G2 LF_COLOR_B2 LF_COLOR_A2 LF3 <empty> LF3SIZE LF3POS LF_COLOR_R3 LF_COLOR_G3 LF_COLOR_B3 LF_COLOR_A3 LF4 <empty> LF4SIZE LF4POS LF_COLOR_R4 LF_COLOR_G4 LF_COLOR_B4 LF_COLOR_A4

screen.BLUR_OPITION = MOTION_BLUR MOTIONBLUR_MAX MOTIONBLUR_STRENGTH MOTIONBLUR_SAMPLE <empty> <empty> DOF FOCUS_BLUR DISTANCE_BLUR EDGE_BLUR FringeOffset BlurAmount MaxDistanceBlurAmount DistanceBlurRange EdgeBlurAmount EdgeBlurDecline

screen.WATER_OPTIONS = WaterColor [COSTOM_WATER_COLOR] <empty> <empty> SEA_HEIGHT SEA_SPEED SEA_FREQ SEA_CHOPPY <empty> <empty> WATER_PARALLAX WATER_REFRACTION NATURAL_WAVE_GENERATOR WATER_CAUSTICS 

screen.COSTOM_WATER_COLOR = WaterFogColor_R WaterFogColor_G WaterFogColor_B <empty> <empty> <empty> WaterColorWeight_R WaterColorWeight_G WaterColorWeight_B <empty> <empty> <empty> DeepWaterFogColor_R DeepWaterFogColor_G DeepWaterFogColor_B <empty> <empty> <empty> WaterColor_A DeepWaterFogStrength <empty> <empty> <empty>

screen.SHADOW_OPTIONS = shadowDistance shadowMapResolution SHADOW_FILTER VARIANCE_SHADOW_MAPS COLORFUL_SHADOW CLOUD_SHADOW WAVING_SHADOW

screen.TONE_OPTION = EXPOSURE AVERAGE_EXPOSURE <empty> <empty> [COLORFUL_TONE] [OTHER_TONE] <empty> <empty> 

screen.COLORFUL_TONE = HUE_ADJUSTMENT <empty> <empty> <empty> TONE [CUSTOM_COLOR_TONE] BLACK_AND_WHITE PRIME_RENDER FILMIC_CINEMATIC <empty> <empty>

screen.CUSTOM_COLOR_TONE=BRIGHTNESS CONTRAST SATURATION VIBRANCE HUE <empty> <empty> <empty> <empty> KEEP_BROGHTNESS <empty> <empty> <empty> <empty> <empty> COLOR_BALANCE_S_R COLOR_BALANCE_M_R COLOR_BALANCE_H_R COLOR_BALANCE_S_G COLOR_BALANCE_M_G COLOR_BALANCE_H_G COLOR_BALANCE_S_B COLOR_BALANCE_M_B COLOR_BALANCE_H_B

screen.OTHER_TONE = NOISE_AND_GRAIN FILMIC_CINEMATIC_ANAMORPHIC EIGHT_BIT

screen.DEBUG_OPTION = SUN_COLOR_TEMPERATURE_DEBUG BLOOM_DEBUG colorTexture_debug ANIMATION_DEBUG TONE_DEBUG <empty> <empty> [OTHER_OPTIONS]

#if MC_VERSION >= 11300
screen.WAVING_OPTION = WAVING_FOILAGE <empty> <empty> <empty> WAVING_LEAVE WAVING_GRASS WAVING_FLOWERS WAVING_TALL_GRASS WAVING_CROP WAVING_VINE WAVING_LILY WAVING_SAPLINGS <empty> <empty> WAVING_SEA_GRASS WAVING_CORALS
#else
screen.WAVING_OPTION = WAVING_FOILAGE <empty> <empty> <empty> WAVING_LEAVE WAVING_GRASS WAVING_FLOWERS WAVING_TALL_GRASS WAVING_CROP WAVING_VINE WAVING_LILY WAVING_SAPLINGS
#endif

screen.INCLUDING = _INCLUDE_EFFECTS _INCLUDE_UNIFORM VIEW_WIDTH _INCLUDE_ATMOS _INCLUDE_UTILITY _INCLUDE_MATERIAL _INCLUDE_LIGHT _INCLUDE_COMPAT _INCLUDE_ANIMATION _INCLUDE_TONE _INCLUDE_LENSFLARE _VERTEX_SHADER_

screen.OTHER_OPTIONS = *
